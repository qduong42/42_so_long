Allowed functions: open, close, read, write, malloc, free, perror(?), strerror(?), exit

math library -lm man man 3 math

miniLibX functions

all coded functions

number of movements in terminal

2D

real time(?)

---------------display image window---------------
management - 
switching window, 
minimizing
esc 
click X = close window in clean way (free all and exit)

--------------------------MAP:------------------
Elements: Player, Exit, collectibles, free space, Wall
read map input
0 - empty space
1 - Wall
C - collectibles (At least 1)
E - exit (At least 1)
P - player starting pos. (At least 1)
Rectangular, Closed by walls
Dont have to check for valid path
parse all kinds of maps.
Exit clean and return Error\n and explicit error message

..Clicking X: Event 17..
Esc key
Minimize = ?

Flow: 
int main
check for:
0) Struct init.
1) Argument check = argc must equal 2 ./so_long X.ber where X is valid map
-------Map checks:-------
1a) X.ber is checked for validity(if file exists, if name is correct) - if FD exists - look at FD return value.
2) read map input: X.ber must be opened
3) Read with get_next_line: char result saved in array(2D)? Row count = after every read of GNL.
4) Wall check: First/last row has to be all '1', first/last column has to be all '1'
5) At least one Exit= 'E', 1 collectible = 'C', 1 Starting pos 'P' -> If two starting pos: random gen with time? or just select smallest one
6) Rectangular check
7) Misconfig -> return "Error\n & Custom message"
----------------initialize mlx -> mlx_init()-----------
initialize window -> x & y dimensions -> dependent on sprite pixel size * x & * y
listen = key capture ----------mlx_key_hook----
Key 'W' Up : 13
Key 'A' Left : 0
Key 'S' Down : 1
Key 'D' Right : 2
Key 'Esc' Escape : 53
Click X = Event -> 17 -> Destroy Notify 
Minimize?
Switch window
--------- MLX FUNCTIONS-------
mlx_init
mlx_new_window
mlx_hook
mlx_keyhook
mlx_destroy window
Player move:
mlx_xpm_file_to_image
mlx_put_image_to_window
mlx_destroy_image 
----Game structure elements----
nr. of moves (Basic: Print in terminal -- Bonus: Print on screen)
window X size
window Y size
collectibles = should be counted, everytime taken, should dissapear, and count --;
walls = present?
